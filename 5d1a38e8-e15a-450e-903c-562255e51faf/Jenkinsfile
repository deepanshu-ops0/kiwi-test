pipeline {
    agent any

    environment {
        GOROOT = '/usr/local/go'
        GOPATH = "${env.WORKSPACE}/gopath"
        PATH = "${env.GOROOT}/bin:${env.GOPATH}/bin:${env.PATH}"
        GO111MODULE = 'on'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/deepanshu-ops0/ops0-cli', branch: 'main'
            }
        }
        
        stage('Set Up Go Environment') {
            steps {
                sh 'go version'
                sh 'mkdir -p ${GOPATH}/src ${GOPATH}/bin'
            }
        }
        
        stage('Download Dependencies') {
            steps {
                sh 'go mod download'
            }
        }
        
        stage('Run Tests') {
            steps {
                sh 'go test -v ./...'
            }
        }
        
        stage('Build Binary') {
            steps {
                sh 'go build -o ops0-cli'
                archiveArtifacts artifacts: 'ops0-cli', fingerprint: true
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully!'
            emailext (
                subject: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """<p>SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'</p>
                <p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            )
        }
        failure {
            echo 'Pipeline failed!'
            emailext (
                subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'</p>
                <p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            )
        }
        always {
            cleanWs()
        }
    }
}